1c2c0[0m
V (279) esp_image: segment 1 map_segment 0 segment_data_offs 0x1c2c0 load_addr 0x3fc93f00ESP-ROM:esp32s3-20210327
Build:Mar 27 2021
rst:0x15 (USB_UART_CHIP_RESET),boot:0x8 (SPI_FAST_FLASH_BOOT)
Saved PC:0x40048836
SPIWP:0xee
mode:DIO, clock div:1
load:0x3fce2810,len:0x2424
load:0x403c8700,len:0x4
load:0x403c8704,len:0xe88
load:0x403cb700,len:0x3274
entry 0x403c8970
[0;32mI (26) boot: ESP-IDF v5.4-dev-826-g8760e6d2a7 2nd stage bootloader[0m
[0;32mI (27) boot: compile time Jun 18 2024 16:34:33[0m
[0;32mI (27) boot: Multicore bootloader[0m
D (31) bootloader_flash: non-XMC chip detected by SFDP Read (C8), skip.[0m
D (38) bootloader_flash: mmu set block paddr=0x00000000 (was 0xffffffff)[0m
[0;32mI (45) boot: chip revision: v0.2[0m
D (49) boot.esp32s3: magic e9[0m
D (52) boot.esp32s3: segments 04[0m
D (55) boot.esp32s3: spi_mode 02[0m
D (58) boot.esp32s3: spi_speed 0f[0m
D (62) boot.esp32s3: spi_size 01[0m
[0;32mI (65) boot.esp32s3: Boot SPI Speed : 80MHz[0m
[0;32mI (70) boot.esp32s3: SPI Mode       : DIO[0m
[0;32mI (74) boot.esp32s3: SPI Flash Size : 2MB[0m
D (79) boot: Enabling RTCWDT(9000 ms)[0m
[0;32mI (83) boot: Enabling RNG early entropy source...[0m
D (88) bootloader_flash: rodata starts from paddr=0x00008000, size=0xc00, will be mapped to vaddr=0x3c000000[0m
V (98) bootloader_flash: after mapping, starting from paddr=0x00000000 and vaddr=0x3c000000, 0x10000 bytes are mapped[0m
D (109) boot: mapped partition table 0x8000 at 0x3c008000[0m
D (114) flash_parts: partition table verified, 4 entries[0m
[0;32mI (120) boot: Partition Table:[0m
[0;32mI (123) boot: ## Label            Usage          Type ST Offset   Length[0m
D (131) boot: load partition table entry 0x3c008000[0m
D (136) boot: type=1 subtype=2[0m
[0;32mI (139) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
D (146) boot: load partition table entry 0x3c008020[0m
D (151) boot: type=1 subtype=1[0m
[0;32mI (154) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
D (162) boot: load partition table entry 0x3c008040[0m
D (167) boot: type=0 subtype=0[0m
[0;32mI (170) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (178) boot: End of partition table[0m
D (182) boot: Trying partition index -1 offs 0x10000 size 0x100000[0m
D (188) esp_image: reading image header @ 0x10000[0m
D (193) bootloader_flash: mmu set block paddr=0x00010000 (was 0xffffffff)[0m
D (200) esp_image: image header: 0xe9 0x05 0x02 0x01 4037546c[0m
V (206) esp_image: loading segment header 0 at offset 0x10018[0m
V (211) esp_image: segment data length 0xc298 data starts 0x10020[0m
V (217) esp_image: segment 0 map_segment 1 segment_data_offs 0x10020 load_addr 0x3c020020[0m
[0;32mI (226) esp_image: segment 0: paddr=00010020 vaddr=3c020020 size=0c298h ( 49816) map[0m
D (234) esp_image: free data page_count 0x00000200[0m
D (239) bootloader_flash: rodata starts from paddr=0x00010020, size=0xc298, will be mapped to vaddr=0x3c000000[0m
V (249) bootloader_flash: after mapping, starting from paddr=0x00010000 and vaddr=0x3c000000, 0x10000 bytes are mapped[0m
V (269) esp_image: loading segment header 1 at offset 0x1c2b8[0m
D (269) bootloader_flash: mmu set block paddr=0x00010000 (was 0xffffffff)[0m
V (273) esp_image: segment data length 0x2b54 data starts 0x1c2c0[0m
V (279) esp_image: segment 1 map_segment 0 segment_data_offs 0x1c2c0 load_addr 0x3fc93f00[0m
[0;32mI (287) esp_image: segment 1: paddr=0001c2c0 vaddr=3fc93f00 size=02b54h ( 11092) load[0m
D (295) esp_image: free data page_count 0x00000200[0m
D (300) bootloader_flash: rodata starts from paddr=0x0001c2c0, size=0x2b54, will be mapped to vaddr=0x3c000000[0m
V (310) bootloader_flash: after mapping, starting from paddr=0x00010000 and vaddr=0x3c000000, 0x10000 bytes are mapped[0m
V (323) esp_image: loading segment header 2 at offset 0x1ee14[0m
D (327) bootloader_flash: mmu set block paddr=0x00010000 (was 0xffffffff)[0m
V (334) esp_image: segment data length 0x11fc data starts 0x1ee1c[0m
V (340) esp_image: segment 2 map_segment 0 segment_data_offs 0x1ee1c load_addr 0x40374000[0m
[0;32mI (348) esp_image: segment 2: paddr=0001ee1c vaddr=40374000 size=011fch (  4604) load[0m
D (357) esp_image: free data page_count 0x00000200[0m
D (362) bootloader_flash: rodata starts from paddr=0x0001ee1c, size=0x11fc, will be mapped to vaddr=0x3c000000[0m
V (372) bootloader_flash: after mapping, starting from paddr=0x00010000 and vaddr=0x3c000000, 0x20000 bytes are mapped[0m
V (384) esp_image: loading segment header 3 at offset 0x20018[0m
D (388) bootloader_flash: mmu set block paddr=0x00020000 (was 0xffffffff)[0m
V (395) esp_image: segment data length 0x1d674 data starts 0x20020[0m
V (401) esp_image: segment 3 map_segment 1 segment_data_offs 0x20020 load_addr 0x42000020[0m
[0;32mI (410) esp_image: segment 3: paddr=00020020 vaddr=42000020 size=1d674h (120436) map[0m
D (418) esp_image: free data page_count 0x00000200[0m
D (423) bootloader_flash: rodata starts from paddr=0x00020020, size=0x1d674, will be mapped to vaddr=0x3c000000[0m
V (433) bootloader_flash: after mapping, starting from paddr=0x00020000 and vaddr=0x3c000000, 0x20000 bytes are mapped[0m
V (465) esp_image: loading segment header 4 at offset 0x3d694[0m
D (466) bootloader_flash: mmu set block paddr=0x00030000 (was 0xffffffff)[0m
V (467) esp_image: segment data length 0xec8c data starts 0x3d69c[0m
V (473) esp_image: segment 4 map_segment 0 segment_data_offs 0x3d69c load_addr 0x403751fc[0m
[0;32mI (481) esp_image: segment 4: paddr=0003d69c vaddr=403751fc size=0ec8ch ( 60556) load[0m
D (490) esp_image: free data page_count 0x00000200[0m
D (495) bootloader_flash: rodata starts from paddr=0x0003d69c, size=0xec8c, will be mapped to vaddr=0x3c000000[0m
V (505) bootloader_flash: after mapping, starting from paddr=0x00030000 and vaddr=0x3c000000, 0x20000 bytes are mapped[0m
V (529) esp_image: image start 0x00010000 end of last section 0x0004c328[0m
D (529) bootloader_flash: mmu set block paddr=0x00040000 (was 0xffffffff)[0m
D (532) boot: Calculated hash: 3fa7a84e3757e0fc2b89ddf40b34b85a249e6d84983c5634aa5c29a1bd2f36c9[0m
[0;32mI (547) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (547) boot: Disabling RNG early entropy source...[0m
D (552) boot: Mapping segment 0 as DROM[0m
D (556) boot: Mapping segment 3 as IROM[0m
D (560) boot: calling set_cache_and_start_app[0m
D (564) boot: configure drom and irom and start[0m
V (569) boot: rodata starts from paddr=0x00010020, vaddr=0x3c020020, size=0xc298[0m
V (576) boot: after mapping rodata, starting from paddr=0x00010000 and vaddr=0x3c020000, 0x10000 bytes are mapped[0m
V (587) boot: mapped one page of the rodata, from paddr=0x00010000 and vaddr=0x3c020000, 0x10000 bytes are mapped[0m
V (597) boot: text starts from paddr=0x00020020, vaddr=0x42000020, size=0x1d674[0m
V (604) boot: after mapping text, starting from paddr=0x00020000 and vaddr=0x42000000, 0x20000 bytes are mapped[0m
D (614) boot: start: 0x4037546c[0m
[0;32mI (629) esp_psram: Found 2MB PSRAM device[0m
[0;32mI (629) esp_psram: Speed: 40MHz[0m
[0;32mI (630) cpu_start: Multicore app[0m
[0;32mI (1049) esp_psram: SPI SRAM memory test OK[0m
[0;32mI (1058) cpu_start: Pro cpu start user code[0m
[0;32mI (1058) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (1059) app_init: Application information:[0m
[0;32mI (1062) app_init: Project name:     supply_and_battery_info[0m
[0;32mI (1068) app_init: App version:      1[0m
[0;32mI (1072) app_init: Compile time:     Jun 18 2024 16:37:12[0m
[0;32mI (1078) app_init: ELF file SHA256:  c020804a5...[0m
[0;32mI (1084) app_init: ESP-IDF:          v5.4-dev-826-g8760e6d2a7[0m
[0;32mI (1090) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (1095) efuse_init: Max chip rev:     v0.99 [0m
[0;32mI (1100) efuse_init: Chip rev:         v0.2[0m
[0;32mI (1105) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (1112) heap_init: At 3FC97490 len 00052280 (328 KiB): RAM[0m
[0;32mI (1118) heap_init: At 3FCE9710 len 00005724 (21 KiB): RAM[0m
[0;32mI (1125) heap_init: At 3FCF0000 len 00008000 (32 KiB): DRAM[0m
[0;32mI (1131) heap_init: At 600FE100 len 00001EE8 (7 KiB): RTCRAM[0m
[0;32mI (1138) esp_psram: Adding pool of 2048K of PSRAM memory to heap allocator[0m
[0;32mI (1146) spi_flash: detected chip: gd[0m
[0;32mI (1149) spi_flash: flash io: dio[0m
[0;33mW (1153) spi_flash: Detected size(8192k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;33mW (1166) i2c: This driver is an old driver, please migrate your application code to adapt `driver/i2c_master.h`[0m
[0;32mI (1177) sleep: Configure to isolate all GPIO pins in sleep state[0m
[0;32mI (1184) sleep: Enable automatic switching of GPIO sleep configuration[0m
[0;32mI (1192) main_task: Started on CPU0[0m
[0;32mI (1202) esp_psram: Reserving pool of 32K of internal memory for DMA/internal allocations[0m
[0;32mI (1202) main_task: Calling app_main()[0m
[0;32mI (1212) gpio: GPIO[0]| InputEn: 0| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (1222) gpio: GPIO[46]| InputEn: 0| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (1232) gpio: GPIO[11]| InputEn: 0| OutputEn: 0| OpenDrain: 0| Pullup: 1| Pulldown: 0| Intr:0 [0m
[0;32mI (1242) PowerFeather::Mainboard: Termination current set to 50 mA.[0m
[0;32mI (1242) gpio: GPIO[38]| InputEn: 1| OutputEn: 0| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0 [0m
Board initialized successfully

[0;32mI (1262) powerfeather: PIR[0m
[0;32mI (1262) powerfeather: sensor output: 0[0m

[0;32mI (2262) powerfeather: PIR[0m
[0;32mI (2262) powerfeather: sensor output: 0[0m

[0;32mI (3262) powerfeather: PIR[0m
[0;32mI (3262) powerfeather: sensor output: 0[0m

[0;32mI (4262) powerfeather: PIR[0m
[0;32mI (4262) powerfeather: sensor output: 1[0m
[0;32mI (4262) powerfeather: Object detected[0m

[0;32mI (5262) powerfeather: PIR[0m
[0;32mI (5262) powerfeather: sensor output: 1[0m
[0;32mI (5262) powerfeather: Object detected[0m

[0;32mI (6262) powerfeather: PIR[0m
[0;32mI (6262) powerfeather: sensor output: 1[0m
[0;32mI (6262) powerfeather: Object detected[0m

[0;32mI (7262) powerfeather: PIR[0m
[0;32mI (7262) powerfeather: sensor output: 1[0m
[0;32mI (7262) powerfeather: Object detected[0m

[0;32mI (8262) powerfeather: PIR[0m
[0;32mI (8262) powerfeather: sensor output: 1[0m
[0;32mI (8262) powerfeather: Object detected[0m

[0;32mI (9262) powerfeather: PIR[0m
[0;32mI (9262) powerfeather: sensor output: 1[0m
[0;32mI (9262) powerfeather: Object detected[0m

[0;32mI (10262) powerfeather: PIR[0m
[0;32mI (10262) powerfeather: sensor output: 1[0m
[0;32mI (10262) powerfeather: Object detected[0m

[0;32mI (11262) powerfeather: PIR[0m
[0;32mI (11262) powerfeather: sensor output: 0[0m
[0;32mI (11262) powerfeather: Warming up[0m

[0;32mI (12262) powerfeather: PIR[0m
[0;32mI (12262) powerfeather: sensor output: 0[0m

[0;32mI (13262) powerfeather: PIR[0m
[0;32mI (13262) powerfeather: sensor output: 0[0m

[0;32mI (14262) powerfeather: PIR[0m
[0;32mI (14262) powerfeather: sensor output: 0[0m

[0;32mI (15262) powerfeather: PIR[0m
[0;32mI (15262) powerfeather: sensor output: 0[0m

[0;32mI (16262) powerfeather: PIR[0m
[0;32mI (16262) powerfeather: sensor output: 0[0m

[0;32mI (17262) powerfeather: PIR[0m
[0;32mI (17262) powerfeather: sensor output: 0[0m

[0;32mI (18262) powerfeather: PIR[0m
[0;32mI (18262) powerfeather: sensor output: 0[0m

[0;32mI (19262) powerfeather: PIR[0m
[0;32mI (19262) powerfeather: sensor output: 0[0m

[0;32mI (20262) powerfeather: PIR[0m
[0;32mI (20262) powerfeather: sensor output: 0[0m

[0;32mI (21262) powerfeather: PIR[0m
[0;32mI (21262) powerfeather: sensor output: 0[0m

[0;32mI (22262) powerfeather: PIR[0m
[0;32mI (22262) powerfeather: sensor output: 0[0m

[0;32mI (23262) powerfeather: PIR[0m
[0;32mI (23262) powerfeather: sensor output: 0[0m

[0;32mI (24262) powerfeather: PIR[0m
[0;32mI (24262) powerfeather: sensor output: 0[0m

[0;32mI (25262) powerfeather: PIR[0m
[0;32mI (25262) powerfeather: sensor output: 0[0m

[0;32mI (26262) powerfeather: PIR[0m
[0;32mI (26262) powerfeather: sensor output: 0[0m

[0;32mI (27262) powerfeather: PIR[0m
[0;32mI (27262) powerfeather: sensor output: 0[0m

[0;32mI (28262) powerfeather: PIR[0m
[0;32mI (28262) powerfeather: sensor output: 0[0m

[0;32mI (29262) powerfeather: PIR[0m
[0;32mI (29262) powerfeather: sensor output: 0[0m

[0;32mI (30262) powerfeather: PIR[0m
[0;32mI (30262) powerfeather: sensor output: 0[0m

[0;32mI (31262) powerfeather: PIR[0m
[0;32mI (31262) powerfeather: sensor output: 0[0m

[0;32mI (32262) powerfeather: PIR[0m
[0;32mI (32262) powerfeather: sensor output: 0[0m

[0;32mI (33262) powerfeather: PIR[0m
[0;32mI (33262) powerfeather: sensor output: 0[0m

[0;32mI (34262) powerfeather: PIR[0m
[0;32mI (34262) powerfeather: sensor output: 0[0m

[0;32mI (35262) powerfeather: PIR[0m
[0;32mI (35262) powerfeather: sensor output: 0[0m

[0;32mI (36262) powerfeather: PIR[0m
[0;32mI (36262) powerfeather: sensor output: 0[0m

[0;32mI (37262) powerfeather: PIR[0m
[0;32mI (37262) powerfeather: sensor output: 0[0m

[0;32mI (38262) powerfeather: PIR[0m
[0;32mI (38262) powerfeather: sensor output: 0[0m

[0;32mI (39262) powerfeather: PIR[0m
[0;32mI (39262) powerfeather: sensor output: 0[0m

[0;32mI (40262) powerfeather: PIR[0m
[0;32mI (40262) powerfeather: sensor output: 0[0m

[0;32mI (41262) powerfeather: PIR[0m
[0;32mI (41262) powerfeather: sensor output: 0[0m

[0;32mI (42262) powerfeather: PIR[0m
[0;32mI (42262) powerfeather: sensor output: 0[0m

[0;32mI (43262) powerfeather: PIR[0m
[0;32mI (43262) powerfeather: sensor output: 0[0m

[0;32mI (44262) powerfeather: PIR[0m
[0;32mI (44262) powerfeather: sensor output: 0[0m

[0;32mI (45262) powerfeather: PIR[0m
[0;32mI (45262) powerfeather: sensor output: 0[0m

[0;32mI (46262) powerfeather: PIR[0m
[0;32mI (46262) powerfeather: sensor output: 0[0m

[0;32mI (47262) powerfeather: PIR[0m
[0;32mI (47262) powerfeather: sensor output: 0[0m

[0;32mI (48262) powerfeather: PIR[0m
[0;32mI (48262) powerfeather: sensor output: 0[0m

[0;32mI (49262) powerfeather: PIR[0m
[0;32mI (49262) powerfeather: sensor output: 0[0m

[0;32mI (50262) powerfeather: PIR[0m
[0;32mI (50262) powerfeather: sensor output: 0[0m

[0;32mI (51262) powerfeather: PIR[0m
[0;32mI (51262) powerfeather: sensor output: 0[0m

[0;32mI (52262) powerfeather: PIR[0m
[0;32mI (52262) powerfeather: sensor output: 0[0m

[0;32mI (53262) powerfeather: PIR[0m
[0;32mI (53262) powerfeather: sensor output: 0[0m

[0;32mI (54262) powerfeather: PIR[0m
[0;32mI (54262) powerfeather: sensor output: 0[0m

[0;32mI (55262) powerfeather: PIR[0m
[0;32mI (55262) powerfeather: sensor output: 0[0m

[0;32mI (56262) powerfeather: PIR[0m
[0;32mI (56262) powerfeather: sensor output: 0[0m

[0;32mI (57262) powerfeather: PIR[0m
[0;32mI (57262) powerfeather: sensor output: 0[0m

[0;32mI (58262) powerfeather: PIR[0m
[0;32mI (58262) powerfeather: sensor output: 0[0m

[0;32mI (59262) powerfeather: PIR[0m
[0;32mI (59262) powerfeather: sensor output: 0[0m

[0;32mI (60262) powerfeather: PIR[0m
[0;32mI (60262) powerfeather: sensor output: 0[0m

[0;32mI (61262) powerfeather: PIR[0m
[0;32mI (61262) powerfeather: sensor output: 0[0m

[0;32mI (62262) powerfeather: PIR[0m
[0;32mI (62262) powerfeather: sensor output: 0[0m

[0;32mI (63262) powerfeather: PIR[0m
[0;32mI (63262) powerfeather: sensor output: 0[0m

[0;32mI (64262) powerfeather: PIR[0m
[0;32mI (64262) powerfeather: sensor output: 0[0m

[0;32mI (65262) powerfeather: PIR[0m
[0;32mI (65262) powerfeather: sensor output: 0[0m

[0;32mI (66262) powerfeather: PIR[0m
[0;32mI (66262) powerfeather: sensor output: 0[0m

[0;32mI (67262) powerfeather: PIR[0m
[0;32mI (67262) powerfeather: sensor output: 0[0m

[0;32mI (68262) powerfeather: PIR[0m
[0;32mI (68262) powerfeather: sensor output: 0[0m

[0;32mI (69262) powerfeather: PIR[0m
[0;32mI (69262) powerfeather: sensor output: 0[0m

[0;32mI (70262) powerfeather: PIR[0m
[0;32mI (70262) powerfeather: sensor output: 0[0m

[0;32mI (71262) powerfeather: PIR[0m
[0;32mI (71262) powerfeather: sensor output: 0[0m

[0;32mI (72262) powerfeather: PIR[0m
[0;32mI (72262) powerfeather: sensor output: 0[0m

[0;32mI (73262) powerfeather: PIR[0m
[0;32mI (73262) powerfeather: sensor output: 0[0m

[0;32mI (74262) powerfeather: PIR[0m
[0;32mI (74262) powerfeather: sensor output: 0[0m

[0;32mI (75262) powerfeather: PIR[0m
[0;32mI (75262) powerfeather: sensor output: 0[0m

[0;32mI (76262) powerfeather: PIR[0m
[0;32mI (76262) powerfeather: sensor output: 0[0m

[0;32mI (77262) powerfeather: PIR[0m
[0;32mI (77262) powerfeather: sensor output: 0[0m

[0;32mI (78262) powerfeather: PIR[0m
[0;32mI (78262) powerfeather: sensor output: 0[0m

[0;32mI (79262) powerfeather: PIR[0m
[0;32mI (79262) powerfeather: sensor output: 0[0m

[0;32mI (80262) powerfeather: PIR[0m
[0;32mI (80262) powerfeather: sensor output: 0[0m

[0;32mI (81262) powerfeather: PIR[0m
[0;32mI (81262) powerfeather: sensor output: 0[0m

[0;32mI (82262) powerfeather: PIR[0m
[0;32mI (82262) powerfeather: sensor output: 0[0m

[0;32mI (83262) powerfeather: PIR[0m
[0;32mI (83262) powerfeather: sensor output: 0[0m

[0;32mI (84262) powerfeather: PIR[0m
[0;32mI (84262) powerfeather: sensor output: 0[0m

[0;32mI (85262) powerfeather: PIR[0m
[0;32mI (85262) powerfeather: sensor output: 0[0m

[0;32mI (86262) powerfeather: PIR[0m
[0;32mI (86262) powerfeather: sensor output: 0[0m

[0;32mI (87262) powerfeather: PIR[0m
[0;32mI (87262) powerfeather: sensor output: 0[0m

[0;32mI (88262) powerfeather: PIR[0m
[0;32mI (88262) powerfeather: sensor output: 0[0m

[0;32mI (89262) powerfeather: PIR[0m
[0;32mI (89262) powerfeather: sensor output: 0[0m

[0;32mI (90262) powerfeather: PIR[0m
[0;32mI (90262) powerfeather: sensor output: 0[0m

[0;32mI (91262) powerfeather: PIR[0m
[0;32mI (91262) powerfeather: sensor output: 0[0m

[0;32mI (92262) powerfeather: PIR[0m
[0;32mI (92262) powerfeather: sensor output: 0[0m

[0;32mI (93262) powerfeather: PIR[0m
[0;32mI (93262) powerfeather: sensor output: 0[0m

[0;32mI (94262) powerfeather: PIR[0m
[0;32mI (94262) powerfeather: sensor output: 0[0m

[0;32mI (95262) powerfeather: PIR[0m
[0;32mI (95262) powerfeather: sensor output: 0[0m

[0;32mI (96262) powerfeather: PIR[0m
[0;32mI (96262) powerfeather: sensor output: 0[0m

[0;32mI (97262) powerfeather: PIR[0m
[0;32mI (97262) powerfeather: sensor output: 0[0m

[0;32mI (98262) powerfeather: PIR[0m
[0;32mI (98262) powerfeather: sensor output: 0[0m

[0;32mI (99262) powerfeather: PIR[0m
[0;32mI (99262) powerfeather: sensor output: 0[0m

[0;32mI (100262) powerfeather: PIR[0m
[0;32mI (100262) powerfeather: sensor output: 0[0m

[0;32mI (101262) powerfeather: PIR[0m
[0;32mI (101262) powerfeather: sensor output: 0[0m

[0;32mI (102262) powerfeather: PIR[0m
[0;32mI (102262) powerfeather: sensor output: 0[0m

[0;32mI (103262) powerfeather: PIR[0m
[0;32mI (103262) powerfeather: sensor output: 0[0m

[0;32mI (104262) powerfeather: PIR[0m
[0;32mI (104262) powerfeather: sensor output: 0[0m

[0;32mI (105262) powerfeather: PIR[0m
[0;32mI (105262) powerfeather: sensor output: 0[0m

